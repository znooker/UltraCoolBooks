@using System.Security.Claims;
@using UltraCoolBooks.Models;

@inject SignInManager<UltraCoolUser> SignInManager
@inject UserManager<UltraCoolUser> UserManager
@inject IHttpContextAccessor HttpContextAccessor
@model UltraCoolBooks.Pages.Books.DetailsModel

@{
    var userId = UserManager.GetUserId(HttpContextAccessor.HttpContext.User);
}

@foreach (var review in Model.Reviews)
{
    <div class="card mt-2" style="width:40rem">
        <div class="card-body">
            <h5>@review.Title</h5>
            <p style="font-size:1rem">Rating: @review.Rating</p>
            <p style="font-size:0.85rem">@review.ReviewText</p>
            @if (SignInManager.IsSignedIn(User))
            {
                <form method="post" asp-page-handler="reviewfeedback" asp-route-id="@review.ReviewId">
                    <button type="submit" title="I like this" class="btn btn-success" name="isHelpful" value="true"><i class="bi bi-hand-thumbs-up"></i></button>
                    <button type="submit" title="I dislike this" class="btn btn-danger" name="isHelpful" value="false"><i class="bi bi-hand-thumbs-down"></i></button>
                    <button type="submit" title="Flag review" class="btn btn-danger" name="hasFlagged" value="true"><i class="bi bi-flag"></i></button>
                </form>
            }

            @if (review.Likes != 0)
            {
                <p class="mt-1">Likes: @review.Likes</p>
            }
            
            @if (userId == review.UserId || User.IsInRole("Administrator") || User.IsInRole("Moderator"))
            {
                <form method="post" asp-page-handler="deletereview" asp-route-id="@review.ReviewId" class="mt-2">
                    <button type="submit" title="Delete review" class="btn btn-danger">Delete</button>
                    <button type="submit" title="Edit review" class="btn btn-secondary" name="editReview" asp-page-handler="editReview" asp-route-id="@review.ReviewId"><i class="bi bi-pencil-square"></i></button>
                </form>
            }



            <p><b>@review.User.UserName</b> - @review.CreatedTimeAgo<p>


        </div>
    </div>
    <div class="row">
        <div class="col-md-4" style="width:40rem">
            <h2>Leave a Comment</h2>
            <form asp-page-handler="AsyncCommentReview" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" name="reviewId" value ="@review.ReviewId"/>
                <input type="hidden" name="bookId" value="@review.BookId" />
                <div class="form-group">
                    <label asp-for="ReviewComment.Comment" class="control-label"></label>
                    <input asp-for="ReviewComment.Comment" name="comment" class="form -control" placeholder="Comment..." maxlength="1000" />
                    <span asp-validation-for="ReviewComment.Comment" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Submit" class="btn btn-primary mt-2" />
                </div>

            </form>
        </div>
    </div>
    <div>
        <ul>
            @foreach (var comment in Model.ReviewComments)
            {
                if (comment.ReviewId == review.ReviewId)
                {
                    <li>@comment.User.UserName: @comment.Comment</li>
                }
            }
        </ul>
    </div>

}

